















version: 2



machine:
  environment:
    PROJECT_NAME: new-portfolio
    CLUSTER_NAME: gke_portfolio-203912_us-central1-a_new_portfolio
    CLOUDSDK_COMPUTE_ZONE: us-central1-a
    DEBIAN_FRONTEND: noninteractive
    IMAGE: new-portfolio-devl
  services:
    - docker

dependencies:
  pre:
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
    - echo $ACCT_AUTH | base64 --decode -i > ${HOME}/account-auth.json
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
    # Reading the zone from the env var is not working so we set it here
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
    - docker build -t us.gcr.io/${PROJECT_NAME}/${IMAGE}:$CIRCLE_SHA1 .
    # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
    - docker tag us.gcr.io/${PROJECT_NAME}/${IMAGE}:$CIRCLE_SHA1 us.gcr.io/${PROJECT_NAME}/${IMAGE}:latest


deployment:
  prod:
    branch: master
    commands:
      - ./deploy.sh
















jobs:
  build:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test
  deploy:
    docker:
    - image: circleci/python:3.6.1
    - image: docker:1.13.1-git

    steps:
      - checkout 
      - run:
          name: Upload to Google
          command: cd deploy && python3 upload.py
      - run:
          name: Deploy to Google
          command: cd deploy && python3 deploy.py

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master